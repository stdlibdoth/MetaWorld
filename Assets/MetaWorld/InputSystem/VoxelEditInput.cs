//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.3.0
//     from Assets/MetaWorld/InputSystem/VoxelEditInput.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @VoxelEditInput : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @VoxelEditInput()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""VoxelEditInput"",
    ""maps"": [
        {
            ""name"": ""SingleEditing"",
            ""id"": ""69e20acb-d26e-498f-80c6-c65a1198c523"",
            ""actions"": [
                {
                    ""name"": ""Spawn"",
                    ""type"": ""Button"",
                    ""id"": ""84b3174b-1b98-4d35-971a-d9b2cfb78f46"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Hold(duration=0.3)"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Delete"",
                    ""type"": ""Button"",
                    ""id"": ""61a10e0f-d880-4237-8b6a-dcba1c76d96f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Hold(duration=0.3)"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""InputMove"",
                    ""type"": ""Value"",
                    ""id"": ""045afad0-6779-4ce8-8c41-d5b25c4d3f58"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""ad5a3810-deaf-4155-b34b-1533a2915373"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Spawn"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d4f1b29b-1494-4bd2-906e-9ed74bc5f1c1"",
                    ""path"": ""<XRController>{RightHand}/triggerPressed"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Spawn"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""de80d86b-fab4-44cf-a03b-e751a53820de"",
                    ""path"": ""<Touchscreen>/Press"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Spawn"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d5e15d4f-3fae-4c9c-b831-4e3dc657eac7"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Delete"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""91901f1f-a860-46a7-a2e1-3642ed064f3b"",
                    ""path"": ""<Mouse>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""InputMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""RectAreaEditing"",
            ""id"": ""4ff92884-a2b3-43e3-83bf-a6a03efd4510"",
            ""actions"": [
                {
                    ""name"": ""AreaSelecting"",
                    ""type"": ""Button"",
                    ""id"": ""f821c767-266b-4e93-9d88-0940d668c3bd"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Hold"",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""bd830baf-b0d7-42fe-97ae-0537e1e8b391"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""AreaSelecting"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""ShortcutActions"",
            ""id"": ""abe2a332-63ec-49d7-84af-04f4ab3f66c4"",
            ""actions"": [
                {
                    ""name"": ""EnterNavigation"",
                    ""type"": ""Button"",
                    ""id"": ""76f81267-a67c-4488-9648-9c054e5a9768"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""EnterSingleEditing"",
                    ""type"": ""Button"",
                    ""id"": ""0c1def4e-9586-4602-aee7-9d426a268c31"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""EnterAreaEditing"",
                    ""type"": ""Button"",
                    ""id"": ""8d856c3a-b993-469d-bd23-fdf7b9722ad2"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ToggleGroundPlane"",
                    ""type"": ""Button"",
                    ""id"": ""d88cc26f-e0b6-4545-bba7-6c06dcbdb424"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""GroundPlaneIncrement"",
                    ""type"": ""Button"",
                    ""id"": ""90b4a35e-ca86-4149-ab99-e9af6e7d3fae"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""GroundPlaneDecrement"",
                    ""type"": ""Button"",
                    ""id"": ""31082383-fb71-4319-9673-bc5352efe034"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""AreaHeightIncrement"",
                    ""type"": ""Button"",
                    ""id"": ""8f141f6e-ce69-40c7-af71-18bdb8bb7f28"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""AreaHeightDecrement"",
                    ""type"": ""Button"",
                    ""id"": ""97cff9b4-a471-4c16-ae88-1f9160900125"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""3c950596-9e9c-4d58-aebd-42586dd42e29"",
                    ""path"": ""<Keyboard>/3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""EnterAreaEditing"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b9734152-d24b-4c4c-981b-66f46f646356"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ToggleGroundPlane"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a7805e2a-38cb-429f-824b-6911bcfbb788"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""GroundPlaneIncrement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4fa417a5-2169-4c62-8862-7e029771847c"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""GroundPlaneDecrement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f29e556a-bbf8-4b05-b8f2-59da9cddd292"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""AreaHeightIncrement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d7e1a12d-61f7-4714-be4b-c105afe1fc42"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""AreaHeightDecrement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8a1d07ed-cd73-41c1-a555-4021b782b47e"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""EnterNavigation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""809ce995-7f00-417d-8f52-e70aeaf5ba55"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""EnterSingleEditing"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""ShortcutToggle"",
            ""id"": ""2ada3a57-831d-4817-b3fc-71b9b14ffb99"",
            ""actions"": [
                {
                    ""name"": ""ToggleShortcut"",
                    ""type"": ""Button"",
                    ""id"": ""41e530a7-a070-48e7-a8f1-3c67d8325d94"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""3ff5f382-db5b-4b0e-a41c-d25648979e0b"",
                    ""path"": ""<Keyboard>/backquote"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ToggleShortcut"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""New control scheme"",
            ""bindingGroup"": ""New control scheme"",
            ""devices"": []
        }
    ]
}");
        // SingleEditing
        m_SingleEditing = asset.FindActionMap("SingleEditing", throwIfNotFound: true);
        m_SingleEditing_Spawn = m_SingleEditing.FindAction("Spawn", throwIfNotFound: true);
        m_SingleEditing_Delete = m_SingleEditing.FindAction("Delete", throwIfNotFound: true);
        m_SingleEditing_InputMove = m_SingleEditing.FindAction("InputMove", throwIfNotFound: true);
        // RectAreaEditing
        m_RectAreaEditing = asset.FindActionMap("RectAreaEditing", throwIfNotFound: true);
        m_RectAreaEditing_AreaSelecting = m_RectAreaEditing.FindAction("AreaSelecting", throwIfNotFound: true);
        // ShortcutActions
        m_ShortcutActions = asset.FindActionMap("ShortcutActions", throwIfNotFound: true);
        m_ShortcutActions_EnterNavigation = m_ShortcutActions.FindAction("EnterNavigation", throwIfNotFound: true);
        m_ShortcutActions_EnterSingleEditing = m_ShortcutActions.FindAction("EnterSingleEditing", throwIfNotFound: true);
        m_ShortcutActions_EnterAreaEditing = m_ShortcutActions.FindAction("EnterAreaEditing", throwIfNotFound: true);
        m_ShortcutActions_ToggleGroundPlane = m_ShortcutActions.FindAction("ToggleGroundPlane", throwIfNotFound: true);
        m_ShortcutActions_GroundPlaneIncrement = m_ShortcutActions.FindAction("GroundPlaneIncrement", throwIfNotFound: true);
        m_ShortcutActions_GroundPlaneDecrement = m_ShortcutActions.FindAction("GroundPlaneDecrement", throwIfNotFound: true);
        m_ShortcutActions_AreaHeightIncrement = m_ShortcutActions.FindAction("AreaHeightIncrement", throwIfNotFound: true);
        m_ShortcutActions_AreaHeightDecrement = m_ShortcutActions.FindAction("AreaHeightDecrement", throwIfNotFound: true);
        // ShortcutToggle
        m_ShortcutToggle = asset.FindActionMap("ShortcutToggle", throwIfNotFound: true);
        m_ShortcutToggle_ToggleShortcut = m_ShortcutToggle.FindAction("ToggleShortcut", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // SingleEditing
    private readonly InputActionMap m_SingleEditing;
    private ISingleEditingActions m_SingleEditingActionsCallbackInterface;
    private readonly InputAction m_SingleEditing_Spawn;
    private readonly InputAction m_SingleEditing_Delete;
    private readonly InputAction m_SingleEditing_InputMove;
    public struct SingleEditingActions
    {
        private @VoxelEditInput m_Wrapper;
        public SingleEditingActions(@VoxelEditInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @Spawn => m_Wrapper.m_SingleEditing_Spawn;
        public InputAction @Delete => m_Wrapper.m_SingleEditing_Delete;
        public InputAction @InputMove => m_Wrapper.m_SingleEditing_InputMove;
        public InputActionMap Get() { return m_Wrapper.m_SingleEditing; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(SingleEditingActions set) { return set.Get(); }
        public void SetCallbacks(ISingleEditingActions instance)
        {
            if (m_Wrapper.m_SingleEditingActionsCallbackInterface != null)
            {
                @Spawn.started -= m_Wrapper.m_SingleEditingActionsCallbackInterface.OnSpawn;
                @Spawn.performed -= m_Wrapper.m_SingleEditingActionsCallbackInterface.OnSpawn;
                @Spawn.canceled -= m_Wrapper.m_SingleEditingActionsCallbackInterface.OnSpawn;
                @Delete.started -= m_Wrapper.m_SingleEditingActionsCallbackInterface.OnDelete;
                @Delete.performed -= m_Wrapper.m_SingleEditingActionsCallbackInterface.OnDelete;
                @Delete.canceled -= m_Wrapper.m_SingleEditingActionsCallbackInterface.OnDelete;
                @InputMove.started -= m_Wrapper.m_SingleEditingActionsCallbackInterface.OnInputMove;
                @InputMove.performed -= m_Wrapper.m_SingleEditingActionsCallbackInterface.OnInputMove;
                @InputMove.canceled -= m_Wrapper.m_SingleEditingActionsCallbackInterface.OnInputMove;
            }
            m_Wrapper.m_SingleEditingActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Spawn.started += instance.OnSpawn;
                @Spawn.performed += instance.OnSpawn;
                @Spawn.canceled += instance.OnSpawn;
                @Delete.started += instance.OnDelete;
                @Delete.performed += instance.OnDelete;
                @Delete.canceled += instance.OnDelete;
                @InputMove.started += instance.OnInputMove;
                @InputMove.performed += instance.OnInputMove;
                @InputMove.canceled += instance.OnInputMove;
            }
        }
    }
    public SingleEditingActions @SingleEditing => new SingleEditingActions(this);

    // RectAreaEditing
    private readonly InputActionMap m_RectAreaEditing;
    private IRectAreaEditingActions m_RectAreaEditingActionsCallbackInterface;
    private readonly InputAction m_RectAreaEditing_AreaSelecting;
    public struct RectAreaEditingActions
    {
        private @VoxelEditInput m_Wrapper;
        public RectAreaEditingActions(@VoxelEditInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @AreaSelecting => m_Wrapper.m_RectAreaEditing_AreaSelecting;
        public InputActionMap Get() { return m_Wrapper.m_RectAreaEditing; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(RectAreaEditingActions set) { return set.Get(); }
        public void SetCallbacks(IRectAreaEditingActions instance)
        {
            if (m_Wrapper.m_RectAreaEditingActionsCallbackInterface != null)
            {
                @AreaSelecting.started -= m_Wrapper.m_RectAreaEditingActionsCallbackInterface.OnAreaSelecting;
                @AreaSelecting.performed -= m_Wrapper.m_RectAreaEditingActionsCallbackInterface.OnAreaSelecting;
                @AreaSelecting.canceled -= m_Wrapper.m_RectAreaEditingActionsCallbackInterface.OnAreaSelecting;
            }
            m_Wrapper.m_RectAreaEditingActionsCallbackInterface = instance;
            if (instance != null)
            {
                @AreaSelecting.started += instance.OnAreaSelecting;
                @AreaSelecting.performed += instance.OnAreaSelecting;
                @AreaSelecting.canceled += instance.OnAreaSelecting;
            }
        }
    }
    public RectAreaEditingActions @RectAreaEditing => new RectAreaEditingActions(this);

    // ShortcutActions
    private readonly InputActionMap m_ShortcutActions;
    private IShortcutActionsActions m_ShortcutActionsActionsCallbackInterface;
    private readonly InputAction m_ShortcutActions_EnterNavigation;
    private readonly InputAction m_ShortcutActions_EnterSingleEditing;
    private readonly InputAction m_ShortcutActions_EnterAreaEditing;
    private readonly InputAction m_ShortcutActions_ToggleGroundPlane;
    private readonly InputAction m_ShortcutActions_GroundPlaneIncrement;
    private readonly InputAction m_ShortcutActions_GroundPlaneDecrement;
    private readonly InputAction m_ShortcutActions_AreaHeightIncrement;
    private readonly InputAction m_ShortcutActions_AreaHeightDecrement;
    public struct ShortcutActionsActions
    {
        private @VoxelEditInput m_Wrapper;
        public ShortcutActionsActions(@VoxelEditInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @EnterNavigation => m_Wrapper.m_ShortcutActions_EnterNavigation;
        public InputAction @EnterSingleEditing => m_Wrapper.m_ShortcutActions_EnterSingleEditing;
        public InputAction @EnterAreaEditing => m_Wrapper.m_ShortcutActions_EnterAreaEditing;
        public InputAction @ToggleGroundPlane => m_Wrapper.m_ShortcutActions_ToggleGroundPlane;
        public InputAction @GroundPlaneIncrement => m_Wrapper.m_ShortcutActions_GroundPlaneIncrement;
        public InputAction @GroundPlaneDecrement => m_Wrapper.m_ShortcutActions_GroundPlaneDecrement;
        public InputAction @AreaHeightIncrement => m_Wrapper.m_ShortcutActions_AreaHeightIncrement;
        public InputAction @AreaHeightDecrement => m_Wrapper.m_ShortcutActions_AreaHeightDecrement;
        public InputActionMap Get() { return m_Wrapper.m_ShortcutActions; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(ShortcutActionsActions set) { return set.Get(); }
        public void SetCallbacks(IShortcutActionsActions instance)
        {
            if (m_Wrapper.m_ShortcutActionsActionsCallbackInterface != null)
            {
                @EnterNavigation.started -= m_Wrapper.m_ShortcutActionsActionsCallbackInterface.OnEnterNavigation;
                @EnterNavigation.performed -= m_Wrapper.m_ShortcutActionsActionsCallbackInterface.OnEnterNavigation;
                @EnterNavigation.canceled -= m_Wrapper.m_ShortcutActionsActionsCallbackInterface.OnEnterNavigation;
                @EnterSingleEditing.started -= m_Wrapper.m_ShortcutActionsActionsCallbackInterface.OnEnterSingleEditing;
                @EnterSingleEditing.performed -= m_Wrapper.m_ShortcutActionsActionsCallbackInterface.OnEnterSingleEditing;
                @EnterSingleEditing.canceled -= m_Wrapper.m_ShortcutActionsActionsCallbackInterface.OnEnterSingleEditing;
                @EnterAreaEditing.started -= m_Wrapper.m_ShortcutActionsActionsCallbackInterface.OnEnterAreaEditing;
                @EnterAreaEditing.performed -= m_Wrapper.m_ShortcutActionsActionsCallbackInterface.OnEnterAreaEditing;
                @EnterAreaEditing.canceled -= m_Wrapper.m_ShortcutActionsActionsCallbackInterface.OnEnterAreaEditing;
                @ToggleGroundPlane.started -= m_Wrapper.m_ShortcutActionsActionsCallbackInterface.OnToggleGroundPlane;
                @ToggleGroundPlane.performed -= m_Wrapper.m_ShortcutActionsActionsCallbackInterface.OnToggleGroundPlane;
                @ToggleGroundPlane.canceled -= m_Wrapper.m_ShortcutActionsActionsCallbackInterface.OnToggleGroundPlane;
                @GroundPlaneIncrement.started -= m_Wrapper.m_ShortcutActionsActionsCallbackInterface.OnGroundPlaneIncrement;
                @GroundPlaneIncrement.performed -= m_Wrapper.m_ShortcutActionsActionsCallbackInterface.OnGroundPlaneIncrement;
                @GroundPlaneIncrement.canceled -= m_Wrapper.m_ShortcutActionsActionsCallbackInterface.OnGroundPlaneIncrement;
                @GroundPlaneDecrement.started -= m_Wrapper.m_ShortcutActionsActionsCallbackInterface.OnGroundPlaneDecrement;
                @GroundPlaneDecrement.performed -= m_Wrapper.m_ShortcutActionsActionsCallbackInterface.OnGroundPlaneDecrement;
                @GroundPlaneDecrement.canceled -= m_Wrapper.m_ShortcutActionsActionsCallbackInterface.OnGroundPlaneDecrement;
                @AreaHeightIncrement.started -= m_Wrapper.m_ShortcutActionsActionsCallbackInterface.OnAreaHeightIncrement;
                @AreaHeightIncrement.performed -= m_Wrapper.m_ShortcutActionsActionsCallbackInterface.OnAreaHeightIncrement;
                @AreaHeightIncrement.canceled -= m_Wrapper.m_ShortcutActionsActionsCallbackInterface.OnAreaHeightIncrement;
                @AreaHeightDecrement.started -= m_Wrapper.m_ShortcutActionsActionsCallbackInterface.OnAreaHeightDecrement;
                @AreaHeightDecrement.performed -= m_Wrapper.m_ShortcutActionsActionsCallbackInterface.OnAreaHeightDecrement;
                @AreaHeightDecrement.canceled -= m_Wrapper.m_ShortcutActionsActionsCallbackInterface.OnAreaHeightDecrement;
            }
            m_Wrapper.m_ShortcutActionsActionsCallbackInterface = instance;
            if (instance != null)
            {
                @EnterNavigation.started += instance.OnEnterNavigation;
                @EnterNavigation.performed += instance.OnEnterNavigation;
                @EnterNavigation.canceled += instance.OnEnterNavigation;
                @EnterSingleEditing.started += instance.OnEnterSingleEditing;
                @EnterSingleEditing.performed += instance.OnEnterSingleEditing;
                @EnterSingleEditing.canceled += instance.OnEnterSingleEditing;
                @EnterAreaEditing.started += instance.OnEnterAreaEditing;
                @EnterAreaEditing.performed += instance.OnEnterAreaEditing;
                @EnterAreaEditing.canceled += instance.OnEnterAreaEditing;
                @ToggleGroundPlane.started += instance.OnToggleGroundPlane;
                @ToggleGroundPlane.performed += instance.OnToggleGroundPlane;
                @ToggleGroundPlane.canceled += instance.OnToggleGroundPlane;
                @GroundPlaneIncrement.started += instance.OnGroundPlaneIncrement;
                @GroundPlaneIncrement.performed += instance.OnGroundPlaneIncrement;
                @GroundPlaneIncrement.canceled += instance.OnGroundPlaneIncrement;
                @GroundPlaneDecrement.started += instance.OnGroundPlaneDecrement;
                @GroundPlaneDecrement.performed += instance.OnGroundPlaneDecrement;
                @GroundPlaneDecrement.canceled += instance.OnGroundPlaneDecrement;
                @AreaHeightIncrement.started += instance.OnAreaHeightIncrement;
                @AreaHeightIncrement.performed += instance.OnAreaHeightIncrement;
                @AreaHeightIncrement.canceled += instance.OnAreaHeightIncrement;
                @AreaHeightDecrement.started += instance.OnAreaHeightDecrement;
                @AreaHeightDecrement.performed += instance.OnAreaHeightDecrement;
                @AreaHeightDecrement.canceled += instance.OnAreaHeightDecrement;
            }
        }
    }
    public ShortcutActionsActions @ShortcutActions => new ShortcutActionsActions(this);

    // ShortcutToggle
    private readonly InputActionMap m_ShortcutToggle;
    private IShortcutToggleActions m_ShortcutToggleActionsCallbackInterface;
    private readonly InputAction m_ShortcutToggle_ToggleShortcut;
    public struct ShortcutToggleActions
    {
        private @VoxelEditInput m_Wrapper;
        public ShortcutToggleActions(@VoxelEditInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @ToggleShortcut => m_Wrapper.m_ShortcutToggle_ToggleShortcut;
        public InputActionMap Get() { return m_Wrapper.m_ShortcutToggle; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(ShortcutToggleActions set) { return set.Get(); }
        public void SetCallbacks(IShortcutToggleActions instance)
        {
            if (m_Wrapper.m_ShortcutToggleActionsCallbackInterface != null)
            {
                @ToggleShortcut.started -= m_Wrapper.m_ShortcutToggleActionsCallbackInterface.OnToggleShortcut;
                @ToggleShortcut.performed -= m_Wrapper.m_ShortcutToggleActionsCallbackInterface.OnToggleShortcut;
                @ToggleShortcut.canceled -= m_Wrapper.m_ShortcutToggleActionsCallbackInterface.OnToggleShortcut;
            }
            m_Wrapper.m_ShortcutToggleActionsCallbackInterface = instance;
            if (instance != null)
            {
                @ToggleShortcut.started += instance.OnToggleShortcut;
                @ToggleShortcut.performed += instance.OnToggleShortcut;
                @ToggleShortcut.canceled += instance.OnToggleShortcut;
            }
        }
    }
    public ShortcutToggleActions @ShortcutToggle => new ShortcutToggleActions(this);
    private int m_NewcontrolschemeSchemeIndex = -1;
    public InputControlScheme NewcontrolschemeScheme
    {
        get
        {
            if (m_NewcontrolschemeSchemeIndex == -1) m_NewcontrolschemeSchemeIndex = asset.FindControlSchemeIndex("New control scheme");
            return asset.controlSchemes[m_NewcontrolschemeSchemeIndex];
        }
    }
    public interface ISingleEditingActions
    {
        void OnSpawn(InputAction.CallbackContext context);
        void OnDelete(InputAction.CallbackContext context);
        void OnInputMove(InputAction.CallbackContext context);
    }
    public interface IRectAreaEditingActions
    {
        void OnAreaSelecting(InputAction.CallbackContext context);
    }
    public interface IShortcutActionsActions
    {
        void OnEnterNavigation(InputAction.CallbackContext context);
        void OnEnterSingleEditing(InputAction.CallbackContext context);
        void OnEnterAreaEditing(InputAction.CallbackContext context);
        void OnToggleGroundPlane(InputAction.CallbackContext context);
        void OnGroundPlaneIncrement(InputAction.CallbackContext context);
        void OnGroundPlaneDecrement(InputAction.CallbackContext context);
        void OnAreaHeightIncrement(InputAction.CallbackContext context);
        void OnAreaHeightDecrement(InputAction.CallbackContext context);
    }
    public interface IShortcutToggleActions
    {
        void OnToggleShortcut(InputAction.CallbackContext context);
    }
}
